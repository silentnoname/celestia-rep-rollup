syntax = "proto3";
package rep.rep;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "rep/rep/params.proto";
// this line is used by starport scaffolding # 1
import "rep/rep/user.proto";

option go_package = "rep/x/rep/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/rep/rep/params";
  }
  // Queries a list of ShowUser items.
	rpc ShowUser(QueryShowUserRequest) returns (QueryShowUserResponse) {
		option (google.api.http).get = "/rep/rep/show_user/{uid}";
	}

// Queries a list of ListUser items.
	rpc ListUser(QueryListUserRequest) returns (QueryListUserResponse) {
		option (google.api.http).get = "/rep/rep/list_user";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryShowUserRequest {
  uint64 uid = 1;
}

message QueryShowUserResponse {
  User user = 1 [(gogoproto.nullable) = false];
}

message QueryListUserRequest {
cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListUserResponse {
  repeated User user = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
